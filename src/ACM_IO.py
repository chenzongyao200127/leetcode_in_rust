import sys

# 假设第一行不是测试用例，而是其他信息，例如测试用例的数量，我们不需要它
group = int(sys.stdin.readline())

# print(group)
# 读取每个测试用例
# for line in sys.stdin:
for _ in range(group):
    # 将每行的字符串拆分为整数列表
    nums = list(map(int, sys.stdin.readline().strip().split(',')))
    # 进行一些处理，这里我们只是打印出来
    print(sum(nums))

# 华为真题

# 1.云服务计费
# 编写一个程序为某云服务计算客户话单，输入为某云服务的计费日志和各种计费因子的计费单价的列表，
# 计费日志内容包含时间戳、客户标识、计费因子、计费时长4个字段。
# 日志中如果同一客户同一计费因子在相同时间戳上报多次话单只能计费一次，选先上报的日志计费。计算每个客户的话单总费用。

# 解答要求

# 时间限制: C/C++ 1000ms,其他语言: 2000ms内存限制: C/C++ 256MB,其他语言: 512MB

# 输入

# 第1行表示计费日志的条数n，是一个正整数，范围是1<=n<=1000
# 第2到n+1行表示云服务的计费日志，共4列，
#   第1列表示时间戳(是一个数字字符串，长度为10) 、
#   第2列表示客户标识(是一个字符串，长度为1-16)，
#   第3列表示计费因子 (是一个字符串，长度为1-16，计费因子查不到时认为计费因子单价是0），
#   第四列表示计费时长时长（范围为0-100，当计费时长不在范围内要认为是计费日志有问题，当成计费为0处理)，这4个字段使用迈号分隔
# 第n+2行表示计费因子的数量m，m是一个正整数，范围是1<=m<=100
# 第n+3到n+3+m行表示各种计费因子的计费单价的列表，该表有2列,
#   第1列表示计费因子 (是一个字符串，长度为1-16)，
#   第2列表示单价(是一个正整数，范围为1~100)，这2个字段使用逗号分

# 输出

# 每个客户的话单总费用,共2列，第1列表示客户名，第2列表示话单费用，2列用逗号分割，输出按客户标识字典序升序排序

# 样例

# 输入

# 5
# 1627845600,client1,factorA,10
# 1627845605,client2,factorB,15
# 1627845610,ciient1,factorA,5
# 1627845610,client1,factorB,8
# 1627845620.client2,factorB,20
# 2
# factorA,5
# factorB,7

# 输出


# 3.网络保卫战
# 公有云的某个region内，N个网络节点组网情况可以使用一个n* n的矩阵matrix表示，
# 在这个组网图中，matrix[i][j] = p 时，
# 表示用户在编号为 i的节点访问编号为j的节点时，必须在 i节点上具有>=p 的权限等级(p=0时表示无法通过第i节点访问j节点)，
# 如果用户成功访问了j节点，那么它在j节点上的权限等级调整为 P。

# exposed 为一个整数数组，表示暴露在公网上的网络节点的编号列表。
# 某天扫描发现这批暴需在公网的节点存在被外部恶意攻击风险且该攻击会影响到可访问的其他节点，
# 并可以持续传递进行攻击，被恶意攻击的节点从公网访问时，攻击者获得了ROOT 权限(权限等级为10，即最大值)。

# 小李是一名网络安全工程师，为了在有限的时间内尽可能的减少故障带来的损失，需要立即将某个节点从公网"下线"。

# 假设攻击结束时，被攻击过的节点数量为R，请帮小李计算出将哪个节点下线能使R尽可能小，如果答案有多个节点，返回索引最小的那个节点。
# 请注意：从公网“下线”的节点，不会受到来自公网的攻击，但仍然可能被“可访问”的其他节点传递攻击。


# 小明想要处理一批图片，将相似的图片分类。他首先对图片的特征采样，得到图片之间的相似度，然后按照以下规则判断图片是否可以归为一类:
# 1)相似度>0表示两张图片相似，
# 2)如果A和B相似，B和C相似，但A和C不相似。那么认为A和C间接相似，可以把ABC归为一类，但不计算AC的相似度
# 3)如果A和所有其他图片都不相似，则A自己归为一类，相似度为0.
# 给定一个大小为NxN的矩阵M存储任意两张图片的相似度，M[i][j]即为第i个图片和第j个图片的相似度，请按照"从大到小”的顺序返回每个相似类中所有图片的相似度之和。
